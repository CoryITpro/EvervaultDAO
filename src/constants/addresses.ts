import { Networks } from "./blockchain";

const BSC_MAINNET = {
    DAO_ADDRESS: "0x346d2154337192a585c26a5210547f20979cb4b8",
    LOOT_ADDRESS: "0x3a38b9ef3999383effa4056cb0b6397b11f934dc",
    EVE_ADDRESS: "0xe5d08A0C671416Ca254cDAe8B8D5f08cb911f0B7",
    BUSD_ADDRESS: "0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7",
    STAKING_ADDRESS: "0x2cCb0f13F02eFd692beb162C33C41e485014EA4d",
    STAKING_HELPER_ADDRESS: "0xc841800cd46e08503b8f8bd0d796866a738311dc",
    EVE_BONDING_CALC_ADDRESS: "0xb0bfa4aaaac639f957c5b149ab70cce53c205310",
    TREASURY_ADDRESS: "0x0773606e445e73bc6789d420c1f8882ce5468dcb",
    ZAPIN_ADDRESS: "0xc669dC61aF974FdF50758d95306e4083D36f1430",
};

export const getAddresses = (networkID: number) => {
    if (networkID === Networks.BSC) return BSC_MAINNET;

    throw Error("Network don't support");
};
